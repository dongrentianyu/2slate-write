title: $:/plugins/linonetwo/slate-write/develop
type: text/vnd.tiddlywiki

!! How this works

# Offer an widget in `src/widget.js` and `src/components/index.ts`, where we provide props like `currentTiddler` to the actual react component in `src/components/editor.tsx`
## Some basic mark and elements like ''bold'' and ordered list are supported by slate plugins imported from `src/config/plugins.ts`
## render advanced tiddlywiki widgets using [[tw-react|https://github.com/tiddly-gittly/tw-react]]'s `useWidget` hook, in our own plugin `src/config/plugins/widget/WidgetBlock.tsx`
# Transform AST to Slate JSON using transformers in src/transform, see `src/transform/README.md` for details. This also transform Slate JSON back to the wikiast and then serialize to wikitext.
## we add some type of wikiast to [[tw5-typed|https://github.com/tiddly-gittly/TW5-Typed]], based on the real json output of `$tw.wiki.parseText('text/vnd.tiddlywiki', input).tree`
## This is imported in editor by `import { deserialize, serialize } from '../../src/transform/serialize';`, and those serialize and deserialize functions uses things in the `src/transform`
## All supported wikitext syntax are tested in the `test` folder, and the tests are run with `npm run test`, you should also add test if you are adding new transformers for new syntax.
# handle keyboard shortcut and basic elements' rendering using slatejs plugins from [[Udecode's Plate framework|https://plate.udecode.io]].
## our custom keyboard shortcuts are configured in `src/config/autoformat`
# There will be a floating toolbar when you selecting text, and you can click on the toolbar to change the text's decoration, this is a react component defined in `src/config/components/Toolbars.tsx`
# When hover on the left of a block, there will be a Drag and drop handle, render by `src/editor/components/withStyledDraggables.tsx`
## Different block have different line height, so we need to add different padding here to align them.

!! TODO

# TODO: allow editing widget and any block's source code, and get preview at real time.
# TODO: allow use tw's default editor toolbar's buttons and their keyboard shortcuts
# TODO: re-support `/` menu in [[Gk0Wk/TW5-CodeMirror-Enhanced|https://github.com/Gk0Wk/TW5-CodeMirror-Enhanced]] to add snippets and advanced elements like table and widget and any wikitext source code
# TODO: optimization: use section splitter in section-editor to ensure only a small potion of text will `onChange` and rerender. And we can get start-end of section from section splitter, so replace the section of text onChange.
# TODO: replace codeblock with codemirror or monaco, so its prism highlight won't need to bundle with plugin, which is big
# TODO: treeshaking serialize-md related things, they are bundled with plate package
